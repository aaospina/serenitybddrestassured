package com.studentapp.junit.studentsidinfo;

import io.restassured.RestAssured;
import net.serenitybdd.junit.runners.SerenityRunner;
import net.serenitybdd.rest.SerenityRest;
import net.thucydides.core.annotations.Manual;
import net.thucydides.core.annotations.Pending;
import net.thucydides.core.annotations.Title;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;

@RunWith(SerenityRunner.class)
public class SerenityStudentsIdInfo {

    @BeforeClass
    public static void init(){
        RestAssured.baseURI="http://localhost:8086/student";
    }

    @Test
    public void getAllStudents(){
        SerenityRest.given()
                .when()
                .get("/list")
                .then()
                .log()
                .all()
                .statusCode(200);

    }

    @Test
    public void thisIsaFailing(){
        SerenityRest.given()
                .when()
                .get("/list")
                .then()
                .log()
                .all()
                .statusCode(500);
    }

    @Pending  //when test case is no ready to execute
    @Test
    public void thisIsAPendingTest(){

    }

    @Ignore   //when you want your test is going to be ignore
    @Test
    public void thisIsASkippedTest(){

    }

    @Test
    public void thisIsATestWithError(){
        System.out.println("This is an error"+(5/0));
    }

    @Test
    public void fileDoesNotExist() throws FileNotFoundException {
        File file = new File("/home/abraham/doesntexistfile.csv");
        FileReader fr = new FileReader(file);
    }

    @Manual
    @Test
    public void thisIsAManualTest() throws FileNotFoundException {

    }

    @Title("this test will get information of all the student from the Student App")
    @Test
    public void test01(){
        SerenityRest.given()
                .when()
                .get("/list")
                .then()
                .log()
                .all()
                .statusCode(200);

    }

}
